Public Class Paciente
    Inherits Pessoa

    ' Propriedades específicas do paciente
    Public Property Plano As String
    Public Property Medico As String
    Public Property TipoAtendimento As String
    Public Property Atendido As Boolean

    ' Construtor
    Public Sub New(nome As String, cpf As String, nascimento As Date, plano As String, medico As String)
        MyBase.New(nome, cpf, nascimento)
        Me.Plano = plano
        Me.Medico = medico
        Me.TipoAtendimento = DefinirTipoAtendimento()
        Me.Atendido = False
    End Sub

    ' Função estática para calcular a idade do paciente
    Shared Function calcular_idade(nascimento As Date) As Integer
        Dim idade As Double = DateDiff(DateInterval.Day, nascimento, Now()) / 365.25
        Return CInt(idade)
    End Function

    ' Método para definir o tipo de atendimento baseado na idade
    Private Function DefinirTipoAtendimento() As String
        Dim idade As Integer = calcular_idade(Me.DataNascimento)
        Return IIf(idade >= 60, "Urgente", "Normal")
    End Function

    ' Método para adicionar paciente à fila e ao banco de dados
    Public Function AdicionarPaciente(listView As ListView) As Boolean
        Try
            ' Criar item para ListView
            Dim item As New ListViewItem(Nome)
            item.SubItems.Add(CPF)
            item.SubItems.Add(DataNascimento.ToShortDateString())
            item.SubItems.Add(calcular_idade(DataNascimento).ToString())
            item.SubItems.Add(Plano)
            item.SubItems.Add(Medico)
            item.SubItems.Add(TipoAtendimento)

            ' Adicionar na posição correta da fila
            If TipoAtendimento = "Urgente" Then
                listView.Items.Insert(0, item)
            Else
                listView.Items.Add(item)
            End If

            ' Salvar no banco de dados
            Return SalvarNoBanco()

        Catch ex As Exception
            MsgBox("Erro ao adicionar paciente: " & ex.Message)
            Return False
        End Try
    End Function

    ' Método para salvar no banco de dados
    Private Function SalvarNoBanco() As Boolean
        Try
            BancoDeDados.Conectar()
            Dim sql As String = "INSERT INTO pacientes (nome, cpf, nascimento, plano, medico, tipo, atendido) VALUES (?,?,?,?,?,?,'não')"
            BancoDeDados.Executar(sql, Nome, CPF, Format(DataNascimento, "yyyy-MM-dd"), Plano, Medico, TipoAtendimento)
            Return True

        Catch ex As Exception
            MsgBox("Erro ao salvar no banco: " & ex.Message)
            Return False

        Finally
            BancoDeDados.Desconectar()
        End Try
    End Function

    ' Método para marcar paciente como atendido
    Public Shared Function MarcarComoAtendido(cpf As String, listView As ListView) As Boolean
        Try
            BancoDeDados.Conectar()
            Dim sql As String = "UPDATE pacientes SET atendido = 'sim' WHERE cpf = ?"
            BancoDeDados.Executar(sql, cpf)

            ' Remover da ListView
            listView.Items(0).Remove()
            Return True

        Catch ex As Exception
            MsgBox("Erro ao marcar paciente como atendido: " & ex.Message)
            Return False

        Finally
            BancoDeDados.Desconectar()
        End Try
    End Function
End Class